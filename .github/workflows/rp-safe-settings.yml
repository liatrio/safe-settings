# REFERENCE
# https://github.com/marketplace/actions/action-for-semantic-release

name: Release, Publish, and Deploy

on:
  push:
    # branches: 
    # - 'main'
  #Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
env:
  REGISTRY: ghcr.io
  REPOSITORY: ${{ github.repository }}
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  release:
    name: Check & Version for Release
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.cycjimmy_release.outputs.new_release_published }}
      previousVersion: ${{ steps.cycjimmy_release.outputs.last_release_version }}
      newVersion: ${{ steps.cycjimmy_release.outputs.new_release_version }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Analyze Commits for Semantic Release
        id: cycjimmy_release
        uses: cycjimmy/semantic-release-action@v3
        env:
          GITHUB_TOKEN: ${{ env.GH_TOKEN }}
  
  publish:
    needs: release
    name: Publish Image
    runs-on: ubuntu-latest
    # if: needs.release.outputs.changed == 'true'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Log Into Registry
        uses: docker/login-action@v2
        with: 
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }} 
          password: ${{ env.GH_TOKEN }}

      - name: Build and Publish Image
        uses: docker/build-push-action@v3
        with:
           context: .
           push: true
           tags: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:latest, ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:v${{ needs.release.outputs.newVersion }}
  
  deploy:
    needs: publish
    name: Deploy to prod
    runs-on: [self-hosted, liatrio-runners-sharedsvc]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.GH_RUNNER_PROD_ROLE_ARN }}
          role-skip-session-tagging: true
          role-duration-seconds: 900

      - name: Setup Kubectl
        uses: Azure/setup-kubectl@v2.1
        with:
          version: 'v1.24.0'

      - name: Helm tool installer
        uses: Azure/setup-helm@v2.1
        with:
          version: 'v3.9.0'          

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name lead --region us-east-1